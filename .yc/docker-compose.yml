version: "3.7"

services:
  my-app:
    image: {{ env.IMAGE_NAME }}
    platform: linux/amd64
    build:
      context: .
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://{{ env.POSTGRES_USER }}:{{ env.POSTGRES_PASSWORD }}@{{ env.POSTGRES_HOST }}:5432/{{ env.POSTGRES_DB }}
      NODE_ENV: {{ env.NODE_ENV }}
      PORT: {{ env.PORT }}
    ports:
      - "{{ env.PORT }}:3000"
    restart: always
    networks:
      - awesome

  postgres:
    image: postgres:13.2-alpine
    ports:
      - "5432:5432"
    volumes:
      - ./postgresdata:/var/lib/postgresql/data
      - ./src/migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    restart: always
    environment:
      POSTGRES_USER: {{ env.POSTGRES_USER }}
      POSTGRES_PASSWORD: {{ env.POSTGRES_PASSWORD }}
      POSTGRES_DB: {{ env.POSTGRES_DB }}
    networks:
      - awesome

  pgadmin:
    image: dpage/pgadmin4:4.18
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - awesome

volumes:
  pgadmin-data:

networks:
  awesome:
    driver: bridge
